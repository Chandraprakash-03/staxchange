// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  githubId    String   @unique @map("github_id")
  username    String
  email       String?
  avatarUrl   String?  @map("avatar_url")
  accessToken String?  @map("access_token")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  projects Project[]

  @@map("users")
}

model Project {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name              String
  githubUrl         String    @map("github_url")
  userId            String    @map("user_id") @db.Uuid
  originalTechStack Json      @map("original_tech_stack")
  targetTechStack   Json?     @map("target_tech_stack")
  status            String    @default("imported")
  fileStructure     Json?     @map("file_structure")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at")

  // Relations
  user           User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversionJobs ConversionJob[]

  @@index([userId])
  @@index([status])
  @@map("projects")
}

model ConversionJob {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  projectId    String    @map("project_id") @db.Uuid
  plan         Json
  status       String    @default("pending")
  progress     Int       @default(0)
  currentTask  String?   @map("current_task")
  results      Json?
  errorMessage String?   @map("error_message")
  startedAt    DateTime? @map("started_at")
  completedAt  DateTime? @map("completed_at")
  createdAt    DateTime  @default(now()) @map("created_at")

  // Relations
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index([projectId])
  @@index([status])
  @@map("conversion_jobs")
}
